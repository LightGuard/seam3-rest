<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" []>
<chapter id="rest.installation">
	<title>Installation</title>
	<para>
		The Seam REST module requires a Java EE 6 compliant server such as
		<ulink url="http://www.jboss.org/jbossas">JBoss
			Application Server</ulink>
		or
		<ulink url="https://glassfish.dev.java.net/">GlassFish</ulink>
		to run on.
	</para>

	<sect1>
		<title>Basics</title>
		<para>
			To use the Seam REST module, add
			<literal>seam-rest</literal>
			and
			<literal>seam-rest-api</literal>
			jars into the web application.
			If using Maven, add the following
			dependency
			into the web application's
			<literal>pom.xml</literal>
			configuration file.
		</para>
	
		<example>
			<title>Dependency added to pom.xml</title>
			<programlisting role="XML"><![CDATA[<dependency> 
		<groupId>org.jboss.seam.rest</groupId> 
		<artifactId>seam-rest-api</artifactId> 
		<version>${seam.rest.version}</version> 
	</dependency>

<dependency> 
		<groupId>org.jboss.seam.rest</groupId> 
		<artifactId>seam-rest-impl</artifactId> 
		<version>${seam.rest.version}</version> 
</dependency>]]></programlisting>
		</example>
	</sect1>

	<sect1>
		<title>Transitive dependencies</title>
		<para>
			Besides, Seam REST has several transitive dependencies (which are
			added automatically when using maven). See
			<xref linkend="rest.dependencies.table" />
			for more details.
		</para>
	</sect1>
	
	<sect1>
		<title>Registering JAX-RS components explicitly</title>
		
		<para>
			The Seam REST module hooks into the exception processing mechanism of JAX-RS by registering
			<literal>SeamExceptionMapper</literal>. Besides, <literal>TemplatingMessageBodyWriter</literal> is registered
			to provide templating support.
		</para>
		
		<para>
			These components registered by default if classpath scanning
			of JAX-RS resources and providers is enabled (an empty <literal>javax.ws.rs.coreApplication</literal> is provided).
		</para>
		
		<programlisting role="JAVA"><![CDATA[@ApplicationPath("/api/*")
public class MyApplication extends Application {}]]></programlisting>

		<para>
			Otherwise, if the Application's <literal>getClasses()</literal> method is overriden to select resources and providers explicitly, 
			<literal>SeamExceptionMapper</literal> must be selected as well.
		</para>
		
		<programlisting role="JAVA"><![CDATA[@ApplicationPath("/api/*")
public class MyApplication extends Application
{
   @Override
   public Set<Class<?>> getClasses()
   {
      Set<Class<?>> classes = new HashSet<Class<?>>();
      ...
      ...
      ...
      classes.add(SeamExceptionMapper.class);
      classes.add(TemplatingMessageBodyWriter.class);
      return classes;
   }
}]]></programlisting>
	</sect1>
</chapter>