<?xml version='1.0' encoding='UTF-8' ?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:s="http://jboss.com/products/seam/taglib"
	template="template.xhtml">
	<ui:define name="content">
		<div class="bodyelement">
			<p><span class="highlight">The Seam Tasks Statistics
				application</span> demostrates use of @RestClient injection.
			</p>
		</div>
		<hr/>
		<div class="bodyelement">
			<h:form>
				<p>
					Firstly, this application is able to connect to the	seam-tasks application and collect
					usage statistics. For that, the seam-tasks must be deployed and available at the <a
						href="http://localhost:8080/seam-tasks">standard URL</a>. Follow the
					instructions in examples/tasks/readme.txt for how to deploy the Seam
					Tasks application. The Seam Tasks Statistics demo connects to the
					running application via REST API and analyzes data stored in the
					application.
				</p>
				<h:commandButton action="#{client.loadStatistics}"
					value="Calculate statistics" />
			</h:form>
		</div>
		<hr/>		
		<div class="bodyelement">
			<h:form>
				<p>
					Alternatively, use the Zip Search service for an example of how to implement a client
					for a remote thirdparty service.
				</p>
				<h:inputText value="#{searchAction.query}" maxlength="5" size="5"/>
				<h:commandButton action="#{searchAction.search}" value="Search zip code" />
			</h:form>
		</div>
		<hr/>
		<div class="bodyelement">
			<h:messages class="message" />
		</div>
	</ui:define>
</ui:composition>
